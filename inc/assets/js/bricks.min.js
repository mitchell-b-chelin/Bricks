class Bricks{
    constructor(){
        this.titlebar = null;
        this.header = document.querySelector('.edit-post-header__toolbar');
        this.publish = document.querySelector('.editor-post-publish-panel__toggle');
        this.setup();
    }
    setup(){
        let box = document.createElement('div');
        box.classList.add('titlebar');
        this.titlebar = box;
        // this.trafficLights();
        // this.postTitle();
        // this.finalize();
        this.subscribe();
    }
    postTitle(){
        let title,svg,input;
        title = document.createElement('div');
        title.classList.add('pagepost-title');
        svg = `<svg height="18px" width="18px" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"><path d="M 13.5 5 C 10.480226 5 8 7.4802259 8 10.5 L 8 41.5 A 1.50015 1.50015 0 1 0 11 41.5 L 11 10.5 C 11 9.1017741 12.101774 8 13.5 8 L 34.5 8 C 35.898226 8 37 9.1017741 37 10.5 L 37 41.5 A 1.50015 1.50015 0 1 0 40 41.5 L 40 10.5 C 40 7.4802259 37.519774 5 34.5 5 L 13.5 5 z M 15.5 11 C 14.672 11 14 11.672 14 12.5 L 14 18.5 C 14 19.328 14.672 20 15.5 20 L 32.5 20 C 33.328 20 34 19.328 34 18.5 L 34 12.5 C 34 11.672 33.328 11 32.5 11 L 15.5 11 z M 16.5 40 A 1.5 1.5 0 0 0 16.5 43 A 1.5 1.5 0 0 0 16.5 40 z M 21.462891 40 A 1.5 1.5 0 0 0 21.462891 43 A 1.5 1.5 0 0 0 21.462891 40 z M 26.5 40 A 1.5 1.5 0 0 0 26.5 43 A 1.5 1.5 0 0 0 26.5 40 z M 31.5 40 A 1.5 1.5 0 0 0 31.5 43 A 1.5 1.5 0 0 0 31.5 40 z"></path></svg>`;
        svg = new DOMParser().parseFromString(svg, 'text/html').body.firstChild;
        input = document.createElement('input');
        input.setAttribute('placeholder', 'Title');
        input.value = this.getValue();
        input.addEventListener('keydown', this.setValue);
        input.addEventListener('keyup', this.setValue);
        input.addEventListener('change', this.setValue);
        title.appendChild(svg);
        title.appendChild(input);
        this.titlebar.appendChild(title);
    }
    getValue(){
        return wp.data.select('core/editor').getEditedPostAttribute('title');
    }
    setValue(e){
        wp.data.dispatch('core/editor').editPost({title: e.target.value});
    }
    trafficLights(){
        let status = wp.data.select('core/editor').getEditedPostAttribute('status');
        let password = wp.data.select('core/editor').getEditedPostAttribute('password') || false;
        if(status === 'auto-draft') status = 'draft';
        let lights = document.createElement('div');
        lights.setAttribute('role', 'toolbar');
        lights.setAttribute('aria-orientation', 'horizontal');
        lights.setAttribute('aria-label', 'Post Status');
        lights.classList.add('traffic-lights');
        let trafficlights = ['publish','draft','private'];
        let lockSvg = `<svg xmlns="http://www.w3.org/2000/svg"  viewBox="0 0 24 24" width="18px" height="18px">    <path d="M 12 1 C 8.6761905 1 6 3.6761905 6 7 L 6 8 C 4.9 8 4 8.9 4 10 L 4 20 C 4 21.1 4.9 22 6 22 L 18 22 C 19.1 22 20 21.1 20 20 L 20 10 C 20 8.9 19.1 8 18 8 L 18 7 C 18 3.6761905 15.32381 1 12 1 z M 12 3 C 14.27619 3 16 4.7238095 16 7 L 16 8 L 8 8 L 8 7 C 8 4.7238095 9.7238095 3 12 3 z M 12 13 C 13.1 13 14 13.9 14 15 C 14 16.1 13.1 17 12 17 C 10.9 17 10 16.1 10 15 C 10 13.9 10.9 13 12 13 z"/></svg>`;
        let lock = new DOMParser().parseFromString(lockSvg, 'text/html').body.firstChild;
        lock.classList.add('password-protected');
        if(password) lock.classList.add('active');
        let lightsDiv = document.createElement('div');
        trafficlights.forEach((light) => {
            let span = document.createElement('span');
            span.classList.add(light);
            if(light == status) span.classList.add('active');
            lightsDiv.appendChild(span);
        });
        lights.appendChild(lightsDiv);
        lights.appendChild(lock);
        this.titlebar.appendChild(lights);
    }
    subscribe(){
        wp.data.subscribe(() => {
                //this.breadcrumb();
                this.setParent();
                // let password = wp.data.select('core/editor').getEditedPostAttribute('password') || false;
                // let lights = this.titlebar.querySelectorAll('.traffic-lights span');
                // let status = wp.data.select('core/editor').getEditedPostAttribute('status');
                // if(status === 'auto-draft') status = 'draft';
                // lights.forEach((light) => {
                //     light.classList.remove('active');
                //     if(light.classList.contains(status)) light.classList.add('active');
                // });
                // if(password) this.titlebar.querySelector('.password-protected').classList.add('active');
                // else this.titlebar.querySelector('.password-protected').classList.remove('active');
        });
    }
    breadcrumb(){
        let breadcrumbs = [];
        document.querySelectorAll('.block-editor-block-breadcrumb li').forEach((breadcrumb) => {
            breadcrumbs.push(breadcrumb.innerText);
        });
        console.log(breadcrumbs);
    }
    finalize(){
        this.header.parentNode.insertBefore(this.titlebar, this.header);
        /**
         * Set all ACF bricks to preview mode
         */
        const blocks = wp.data.select( 'core/block-editor' ).getBlocks();
        blocks.forEach(block => {
            if(block.name.startsWith("acf/") || block.name.startsWith("bricks/")){
                //if blocks.innerBlocks exists
                if(block.innerBlocks.length > 0){
                    block.innerBlocks.forEach(innerBlock => {
                        wp.data.dispatch( 'core/block-editor' ).updateBlockAttributes(innerBlock.clientId, { mode: 'preview' });
                    });
                }
                wp.data.dispatch( 'core/block-editor' ).updateBlockAttributes(block.clientId, { mode: 'preview' });
            }
        });
    }
    setinner(block){
        wp.data.dispatch( 'core/block-editor' ).updateBlockAttributes(block.clientId, { mode: 'preview' });
        if(block.innerBlocks.length > 0){
            block.innerBlocks.forEach(innerBlock => { this.setinner(innerBlock); });
        }
    }
    setParent(){
        const blocks = wp.data.select( 'core/block-editor' ).getBlocks();
        blocks.forEach(block => {
            if(block.name.startsWith("acf/") || block.name.startsWith("bricks/")){
                if(block.innerBlocks.length > 0){
                    block.innerBlocks.forEach(innerBlock => { this.setinner(innerBlock); });
                }
                this.setinner(block);
            }
        });
    }
}

window._wpLoadBlockEditor.then(() => {
    setTimeout(() => {
        setParent();
    }, 500);
});
function setParent(){
    const blocks = wp.data.select( 'core/block-editor' ).getBlocks();
    blocks.forEach(block => {
        if(block.name.startsWith("acf/") || block.name.startsWith("bricks/")){
            if(block.innerBlocks.length > 0){
                block.innerBlocks.forEach(innerBlock => { this.setinner(innerBlock); });
            }
            setinner(block);
        }
    });
}
function setinner(block){
    wp.data.dispatch( 'core/block-editor' ).updateBlockAttributes(block.clientId, { mode: 'preview' });
    if(block.innerBlocks.length > 0){
        block.innerBlocks.forEach(innerBlock => { setinner(innerBlock); });
    }
}
setParent();
